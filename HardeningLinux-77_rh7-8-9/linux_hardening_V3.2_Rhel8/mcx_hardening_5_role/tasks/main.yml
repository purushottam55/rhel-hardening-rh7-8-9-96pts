---

- name: "5.1.1.7 | PATCH | Ensure rsyslog is not configured to recieve logs from a remote client. | When not log host"
  ansible.builtin.replace:
    path: /etc/rsyslog.conf
    regexp: '{{ item }}'
    replace: '#\1'
  loop:
    - '^(\$ModLoad imtcp)'
    - '^(\$InputTCPServerRun)'
    - '^(module\(load="imtcp"\))'
    - '^(input\(type="imtcp")'
  notify: Restart_rsyslog

- name: "5.1.1.7 | PATCH | Ensure rsyslog is not configured to recieve logs from a remote clients. | When log host"
  ansible.builtin.replace:
    path: /etc/rsyslog.conf
    regexp: '^#(.*{{ item }}.*)'
    replace: '\1'
  loop:
    - 'ModLoad imtcp'
    - 'InputTCPServerRun'
  notify: Restart_rsyslog

#- name: "5.1.1.7 | PATCH | Ensure rsyslog is not configured to recieve logs from a remote client"
#  notify: Restart_rsyslog
#    - name: "5.1.1.7 | PATCH | Ensure rsyslog is not configured to recieve logs from a remote client. | When not log host"
#      ansible.builtin.replace:
#        path: /etc/rsyslog.conf
#        regexp: '{{ item }}'
#        replace: '#\1'
#      loop:
#        - '^(\$ModLoad imtcp)'
#        - '^(\$InputTCPServerRun)'
#        - '^(module\(load="imtcp"\))'
#        - '^(input\(type="imtcp")'
#
#    - name: "5.1.1.7 | PATCH | Ensure rsyslog is not configured to recieve logs from a remote clients. | When log host"
#      ansible.builtin.replace:
 #       path: /etc/rsyslog.conf
#        regexp: '^#(.*{{ item }}.*)'
#        replace: '\1'
#      loop:
#        - 'ModLoad imtcp'
#        - 'InputTCPServerRun'


#########
- name: 5.1.3 Backup of /etc/logrotate.conf file
  copy:
    src: /etc/logrotate.conf
    dest: "/etc/logrotate.conf.backup-{{ '%Y%m%d%H%M%S' | strftime}}"
    remote_src: yes
  ignore_errors: yes

- name: 5.1.3 Ensure logrotate package is installed
  yum:
    name: logrotate
    state: present

- name: 5.1.3.1 Ensure /etc/logrotate.conf exists
  copy:
    dest: /etc/logrotate.conf
    content: |
      daily
      rotate 7
      compress
      missingok
      notifempty
      create 0640 root utmp
      include /etc/logrotate.d
    mode: '0644'
    owner: root
    group: root

- name: 5.1.3.2 Ensure logrotate is scheduled via cron.daily
  stat:
    path: /etc/cron.daily/logrotate
  register: logrotate_cron

- name: 5.1.3.3 Warn if logrotate cron job is missing
  debug:
    msg: "Logrotate cron is missing in /etc/cron.daily"
  when: not logrotate_cron.stat.exists
############
- name: "5.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  block:

    - name: Ensure AIDE package is installed
      ansible.builtin.yum:
        name: aide
        state: present

    - name: Create systemd service unit for AIDE integrity check
      ansible.builtin.copy:
        dest: /etc/systemd/system/aidecheck.service
        content: |
          [Unit]
          Description=AIDE integrity check

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/aide --check
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd

    - name: Create systemd timer unit for AIDE integrity check
      ansible.builtin.copy:
        dest: /etc/systemd/system/aidecheck.timer
        content: |
          [Unit]
          Description=Run AIDE integrity check daily

          [Timer]
          OnCalendar=daily
          Persistent=true

          [Install]
          WantedBy=timers.target
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start aidecheck timer
      ansible.builtin.systemd:
        name: aidecheck.timer
        enabled: true
        state: started

    - name: Configure AIDE cron job as additional check
      ansible.builtin.cron:
        name: "Run AIDE integrity check (cron)"
        user: root
        minute: "0"
        hour: "5"
        job: "/usr/sbin/aide --check"



###############################
#- name: 5.5.4 Ensure password hashing algorithm is SHA-512 (Automated)
#  ignore_errors: yes
#  block:
#    - name: 4.5.1.1 Ensure strong password hashing algorithm is configured  
#      lineinfile:
#        path: "{{ item.path }}"
#        regexp: "{{ item.regexp }}"
#        line: "{{ item.line }}"
#        state: present
#      loop:
#        - { path: /etc/libuser.conf, regexp: '^#?crypt_style', line: 'crypt_style = sha512' }
#        - { path: /etc/login.defs, regexp: '^#?ENCRYPT_METHOD', line: 'ENCRYPT_METHOD SHA512' }

#    - name: 4.5.1.1 Ensure password hashing algorithm is SHA-512 (Automated) | Configure pam_unix.so
#      script: script_5_5_4.sh

############Need Ips Not working#########


#- name: 4.2.2.1.1       Ensure systemd-journal-remote is installed (Manual) | Install systemd-journal-remote package
#  package:
#    name: systemd-journal-remote
#    state: latest
#  ignore_errors: true



# 4.2.2.1.2     Ensure systemd-journal-remote is configured (Manual)

#- name: 4.2.2.1.2       Ensure systemd-journal-remote is configured (Manual) Set configuration options in systemd-journal-upload.conf
#  blockinfile:
#    path: /etc/systemd/journal-upload.conf
#    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
#    block: |
#      URL=192.168.91.233
#      ServerKeyFile=/etc/ssl/private/journal-upload.pem
#      ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
#      TrustedCertificateFile=/etc/ssl/ca/trusted.pem
#  loop: ['']
#  notify:
 #   - Restart systemd-journal-upload
#  ignore_errors: true

#- name: 4.2.2.1.3       Ensure systemd-journal-remote is enabled (Manual) | Enable and start systemd-journal-upload
#  service:
#    name: systemd-journal-upload.service
#    state: started
#    enabled: yes
#  ignore_errors: true
#
#
#- name: 4.2.2.1.4 Ensure journald is not configured to recieve logs from a remote client (Automated)
#  systemd:
#    name: systemd-journal-remote.socket
#    state: stopped
#    masked: yes
#  ignore_errors: true

#- name: 4.2.2.1.4      Ensure journald is not configured to recieve logs from a remote client (Automated) | Mask systemd-journal-remote.socket using systemctl
# systemd:
#   name: systemd-journal-remote.socket
#   state: masked
#

#- name: 4.2.2.1.3       Ensure systemd-journal-remote is enabled (Manual) | Enable and start systemd-journal-upload
#  service:
#    name: systemd-journald
#    state: started
#    enabled: yes
#  ignore_errors: true


#- name: 4.2.2.1.3 Ensure systemd-journal-upload is enabled and started
#  service:
#    name: systemd-journal-upload.service
#    state: started
#    enabled: yes
#  ignore_errors: true

#- name: 4.2.2.1.3 Ensure systemd-journald is enabled and started
#  service:
#    name: systemd-journald
#    state: started
#    enabled: yes
#  ignore_errors: true

#- name: 4.2.2.1.4 Ensure journald is not configured to receive logs from a remote client - stop and mask socket
#  systemd:
#    name: systemd-journal-remote.socket
 #   state: stopped
#    masked: yes
 # ignore_errors: true
